version: 2.1
orbs:
  swissknife: roopakv/swissknife@0.68.0
jobs:
  build-and-test:
    docker:
      - image: circleci/golang:1.15

    working_directory: /go/src/github.com/BoltApp/sleet

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pkg-cache
      - run:
          name: Build
          command: |
            go build -v ./...
      - run:
          name: Unit Test
          command: |
            go test -v \
              -coverpkg $(go list ./... | grep -v integration-tests | grep -v testing | tr '\n' ',' | sed -e 's/.$//') \
              -coverprofile=unit_coverage.profile -tags=unit \
              $(go list ./... | grep -v integration-tests)
      - run:
          name: Integration Test
          command: |
            cd integration-tests
            go test -v
      - run:
          name: Install goimports
          command: |
            go install golang.org/x/tools/cmd/goimports@v0.2.0
      - swissknife/fail_if_dirty:
          pattern: .*.go
          invert-pattern: false
          custom-error-message: Please run 'goimports -w ./' and push up again
          print-modified-files: true
          steps-to-run:
            - run:
                name: Run goimports
                command: goimports -w ./
      - save_cache:
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
  release-github:
    docker:
      - image: circleci/golang:1.13
    steps:
      - swissknife/publish_github_release:
          tag: v1.1.$CIRCLE_BUILD_NUM

workflows:
  version: 2.1
  build-and-test:
    jobs:
      - build-and-test
      - release-github:
          filters:
            branches:
              only: master
